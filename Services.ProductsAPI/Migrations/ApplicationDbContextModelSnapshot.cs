// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Services.ProductsAPI.DBContexts;

namespace Services.ProductsAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Services.ProductsAPI.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CategoryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.HasKey("ProductId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            CategoryName = "PC",
                            Description = "My Description 1",
                            ImageUrl = "",
                            Name = "Product 1",
                            Price = 100.34
                        },
                        new
                        {
                            ProductId = 2,
                            CategoryName = "PC",
                            Description = "My Description 2",
                            ImageUrl = "",
                            Name = "Product 2",
                            Price = 200.34
                        },
                        new
                        {
                            ProductId = 3,
                            CategoryName = "Laptop",
                            Description = "My Description 3",
                            ImageUrl = "",
                            Name = "Product 3",
                            Price = 300.33999999999997
                        },
                        new
                        {
                            ProductId = 4,
                            CategoryName = "Laptop",
                            Description = "My Description 4",
                            ImageUrl = "",
                            Name = "Product 4",
                            Price = 400.44
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
